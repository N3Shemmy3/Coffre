name: Dev branch CI

on:
  push:
    branches: ["compose-dev"]
    paths-ignore:
      - ".github/"
      - ".idea/"
      - "fastlane/"
      - ".gitignore"
      - "*.md"
      - "LICENSE"
  pull_request:
    branches: ["compose-dev"]
    paths-ignore:
      - ".github/"
      - ".idea/"
      - "fastlane/"
      - ".gitignore"
      - "*.md"
      - "LICENSE"
  workflow_dispatch:

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Set release type
        run: echo "releaseType=CI" > package.properties

      - name: Create signing files
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p ~/.gradle
          echo "${{ secrets.KEYSTORE_SECRET }}" | base64 -d > ~/key.jks
          echo "SHEMMY_RELEASE_STORE_FILE=$(realpath ~/key.jks)" > ~/.gradle/gradle.properties
          echo "SHEMMY_RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PWD }}" >> ~/.gradle/gradle.properties
          echo "SHEMMY_RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> ~/.gradle/gradle.properties
          echo "SHEMMY_RELEASE_KEY_PASSWORD=${{ secrets.KEY_PWD }}" >> ~/.gradle/gradle.properties

      - name: Build release
        if: github.event_name != 'pull_request'
        run: ./gradlew :app:assembleRelease

      - name: Build debug
        if: github.event_name == 'pull_request'
        run: ./gradlew :app:assembleDebug

      - name: Find APK
        id: find_apk
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            APK_PATH=$(find app/build/outputs/apk/debug -name '*.apk' | head -n 1)
          else
            APK_PATH=$(find app/build/outputs/apk/release -name '*.apk' | head -n 1)
          fi

          echo "Found APK at: $APK_PATH"
          echo "apk_path=$APK_PATH" >> "$GITHUB_OUTPUT"

      - name: Debug APK path
        run: echo "Artifact path is ${{ steps.find_apk.outputs.apk_path }}"

      - name: Upload APK
        if: steps.find_apk.outputs.apk_path != ''
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ github.event_name == 'pull_request' && 'debug' || 'release' }}
          path: ${{ steps.find_apk.outputs.apk_path }}
          compression-level: 9